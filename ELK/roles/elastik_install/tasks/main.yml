---
- name: Change swapiness
  sysctl:
    name: vm.swappiness
    value: 1
    sysctl_set: yes
    state: present
    reload: yes

- name: Change max_map_count
  sysctl:
    name: vm.max_map_count
    value: 262144
    sysctl_set: yes
    state: present
    reload: yes

- name: Change file-max
  sysctl:
    name: fs.file-max
    value: 100000
    sysctl_set: yes
    state: present
    reload: yes

- name: Set PAM limits for elasticsearch user.
  pam_limits:
    domain: "{{ item.domain }}"
    limit_item: "{{ item.limit_item }}"
    limit_type: "{{ item.limit_type }}"
    value: "{{ item.value }}"
    backup: yes
  with_items: "{{ ELK_stack.elasticsearch.elk_elasticsearch_pam_limits }}"

- name: Download elasticsearch
  get_url:
    url: "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{{ ELK_stack.global.major_version }}.\
         {{ ELK_stack.global.minor_version }}.{{ ELK_stack.global.patch }}.rpm"
    dest: "{{ ELK_stack.global.temp_folder }}"

- name: Install jdk.
  yum:
     name: "{{ ELK_stack.global.java_version }}"
     state: present

- name: Install elasticsearch rpm.
  yum:
     name: "{{ ELK_stack.global.temp_folder}}/elasticsearch-{{ ELK_stack.global.major_version }}.\
            {{ ELK_stack.global.minor_version }}.{{ ELK_stack.global.patch }}.rpm"
     state: present

- name: Copy main conf for elastic
  template:
    src: "elasticsearch.yml.j2"
    dest: "/etc/elasticsearch/elasticsearch.yml"

- name: Copy main JVM conf for elastic
  template:
    src: "jvm.options.j2"
    dest: "/etc/elasticsearch/jvm.options"

- name: Copy main log conf for elastic
  copy:
    src: log4j2.properties
    dest: "/etc/elasticsearch/log4j2.properties"
    mode: 0755

- name: Copy elasticsearch-file
  copy:
    src: elasticsearch
    dest: "/etc/sysconfig/elasticsearch"
    mode: 0755

- name: Copy Elastic service sfile
  copy:
    src: elasticsearch.service
    dest: "/usr/lib/systemd/system/elasticsearch.service"
    mode: 0755

- name: Start elasticsearch service, if not started
  service:
    name: elasticsearch
    state: started

- pause: minutes=1

- name: Check elasticsearch
  uri:
    url: "http://{{ inventory_hostname }}:9200"
    status_code: ['200','503']
  register: response
  until: "response.json != {}"
  retries: 6
  delay: 10

- name: check parameter
  debug:
    msg: "{{ inventory_hostname }}"